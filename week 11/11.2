.eqv KEY_CODE 0xFFFF0004
.eqv KEY_READY 0xFFFF0000
.eqv DISPLAY_CODE 0xFFFF000C
.eqv DISPLAY_READY 0xFFFF0008
.text
	li $k0, KEY_CODE
	li $k1, KEY_READY
	li $s0, DISPLAY_CODE
	li $s1, DISPLAY_READY
loop: 	nop
WaitForKey: 
	lw $t1, 0($k1) # $t1 = [$k1] = KEY_READY
	beq $t1, $zero, WaitForKey # if $t1 == 0 then Polling
ReadKey:
	lw $t0, 0($k0) # $t0 = [$k0] = KEY_CODE
WaitForDis: 
	lw $t2, 0($s1) # $t2 = [$s1] = DISPLAY_READY
	beq $t2, $zero, WaitForDis # if $t2 == 0 then Polling
Check1:
	bge $t0, 48, Number
	j ELSE
Check2:
	bge $t0, 65, LowCase
	j ELSE
Check3:
	bge $t0, 97, UpCase
ELSE:
	addi $t0, $zero, 42
ShowKey:
	beq $t0, 69, CheckExit1
	beq $t0, 88, CheckExit2
	beq $t0, 73, CheckExit3
	beq $t0, 84, CheckExit4
Reset:
	addi $v0, $zero, 0
Show:
	sw $t0, 0($s0) # show key
	nop
	j loop
Number:
	ble $t0, 57, ShowKey
	j Check2
LowCase:
	bgt $t0, 90, Check3
	addi $t0, $t0, 32
	j ShowKey
UpCase:
	bgt $t0, 122, ELSE
	addi $t0, $t0, -32
	j ShowKey
CheckExit1:
	bnez $v0, Reset
	addi $v0, $v0, 1
	j Show
CheckExit2:
	bne $v0, 1, Reset
	addi $v0, $v0, 1
	j Show
CheckExit3:
	bne $v0, 2, Reset
	addi $v0, $v0, 1
	j Show
CheckExit4:
	bne $v0, 3, Reset
End:
	li $v0, 10
	syscall
