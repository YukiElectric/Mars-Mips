.data
	A: 	.word
	Message:	.asciiz	"Enter number of array: "
	Message0: 	.asciiz	"Enter number: "
	Message1:	.asciiz "Array after each round insertion sort is:"
	Message2:	.asciiz " , "
	Newline:	.asciiz "\n"
.text
input_number:
	li $v0,4
	la $a0, Message
	syscall
	li $v0,5
	syscall
	move $a1, $v0
	subi $a1, $a1, 1
	addi $s0, $s0, 0
	la $a0, A
	addi $s0, $a0, 0
input_array:
	bgt $t0, $a1, end_input
	li $v0,4
	la $a0, Message0
	syscall
	li $v0,5
	syscall
	move $t1, $v0
	sw $t1, 0($s0)
	addi $s0, $s0, 4
	addi $t0, $t0, 1
	j input_array
end_input:
main:
	la	$a0, A		#address of A[0]
	addi $s3, $a1, 1
	mul  $s4, $s3, 4
	add $t6, $a0, $s4
	la $a1, 0($t6)
	subi $a1, $a1, 4
	addi $t0, $zero, 0
	j insertion_sort
print_sort:
	li	$v0, 4
	la	$a0, Message1
	syscall			#print message1
	la	$a0, Newline
	syscall			#print newLine
	la	$s0, A
	la	$s1, 0($t6)
	lw	$s2, 0($s0)
	li	$v0, 1
	la	$a0, 0($s2)	#print number1 of array
	syscall
	addi	$t3, $zero, 0 	#i = 0
	j print_array
print_array:
	addi	$t3, $t3, 4		# i++
	add	$t4, $s0, $t3		# $t1 = adrress of A[0] + 4*i (A[i])
	lw	$t5, 0($t4)		# x = A[i]
	beq	$t4, $s1, end		# if i>(n-1) end
	li	$v0, 4
	la	$a0, Message2
	syscall				# print Message2
	li	$v0, 1
	la	$a0, 0($t5)
	syscall				# print A[i]
	j	print_array
end:
	li	$v0, 4
	la	$a0, Newline
	syscall
	j	insertion_sort
insertion_sort:
	la	$a0, A
	addi	$t0, $t0, 4	# i++
	add	$v0, $a0, $t0	# i = 1
	bgt	$v0, $a1, end_main
	lw	$s0, 0($v0)	# key = A[i]
	subi	$v1, $v0, 4	# j = i-1
loop:
	blt	$v1, $a0, end_loop	# if j < 0 end_loop
	lw	$s1, 0($v1)		# $s1 = A[j]
	blt	$s1, $s0, end_loop	# if A[j] < key end_loop
	addi	$t2, $v1, 4		# $t2 = j+1
	sw	$s1, 0($t2)		# A[j+1] = A[j]
	subi	$v1, $v1, 4		# j--
	j	loop
end_loop:
	addi	$t2, $v1, 4	# $t2 = j+1
	sw	$s0, 0($t2)	# A[j+1] = key
	j print_sort
end_main:
	li	$v0, 10
	syscall
	
